// -------------------------------------------------------------
// 
// File Name: C:\Users\team06\Documents\MATLAB\Examples\R2022b\visionhdl\BlobAnalysisExample\verilog_hdl\BlobAnalysisHDL\FrameBoundary.v
// Created: 2022-12-23 11:30:02
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FrameBoundary
// Source Path: BlobAnalysisHDL/BlobDetector/FrameBoundary
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FrameBoundary
          (clk,
           reset,
           enb,
           CloseOpIn,
           AreaThresh,
           VMi,
           ctrl_vStart,
           ctrl_valid,
           CloseOpOut,
           AreaThreshOut,
           VMo);


  input   clk;
  input   reset;
  input   enb;
  input   CloseOpIn;
  input   [31:0] AreaThresh;  // uint32
  input   [7:0] VMi;  // uint8
  input   ctrl_vStart;
  input   ctrl_valid;
  output  CloseOpOut;
  output  [31:0] AreaThreshOut;  // uint32
  output  [7:0] VMo;  // uint8


  wire vStart;
  wire valid;
  wire Logical_Operator_out1;
  reg  Delay_out1;
  wire Delay_ectrl;
  reg [31:0] Delay2_out1;  // uint32
  wire [31:0] Delay2_ectrl;  // uint32
  reg [7:0] Delay3_out1;  // uint8
  wire [7:0] Delay3_ectrl;  // uint8


  assign vStart = ctrl_vStart;

  assign valid = ctrl_valid;

  assign Logical_Operator_out1 = vStart & valid;



  assign Delay_ectrl = (Logical_Operator_out1 == 1'b0 ? Delay_out1 :
              CloseOpIn);



  always @(posedge clk or posedge reset)
    begin : Delay_lowered_process
      if (reset == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay_out1 <= Delay_ectrl;
        end
      end
    end



  assign CloseOpOut = Delay_out1;

  assign Delay2_ectrl = (Logical_Operator_out1 == 1'b0 ? Delay2_out1 :
              AreaThresh);



  always @(posedge clk or posedge reset)
    begin : Delay2_lowered_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 32'b00000000000000000000000000000000;
      end
      else begin
        if (enb) begin
          Delay2_out1 <= Delay2_ectrl;
        end
      end
    end



  assign AreaThreshOut = Delay2_out1;

  assign Delay3_ectrl = (Logical_Operator_out1 == 1'b0 ? Delay3_out1 :
              VMi);



  always @(posedge clk or posedge reset)
    begin : Delay3_lowered_process
      if (reset == 1'b1) begin
        Delay3_out1 <= 8'b00000000;
      end
      else begin
        if (enb) begin
          Delay3_out1 <= Delay3_ectrl;
        end
      end
    end



  assign VMo = Delay3_out1;

endmodule  // FrameBoundary

